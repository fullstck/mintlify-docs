Directory structure:
└── fullstck-mintlify-docs/
    ├── README.md
    ├── introduction.mdx
    ├── mint.json
    ├── api-reference/
    │   ├── authentication.mdx
    │   ├── concepts.mdx
    │   ├── errors.mdx
    │   ├── faq.mdx
    │   ├── introduction.mdx
    │   └── endpoint/
    │       ├── indicators/
    │       │   ├── locations.mdx
    │       │   ├── points_of_interest.mdx
    │       │   └── price_per_meter.mdx
    │       ├── properties/
    │       │   ├── get_collection.mdx
    │       │   ├── get_similar.mdx
    │       │   └── get_single.mdx
    │       ├── searches/
    │       │   ├── create.mdx
    │       │   ├── delete.mdx
    │       │   ├── get_collection.mdx
    │       │   ├── get_single.mdx
    │       │   └── update.mdx
    │       └── webhooks/
    │           └── send.mdx
    └── logo/

================================================
File: README.md
================================================
# Mintlify Starter Kit

Click on `Use this template` to copy the Mintlify starter kit. The starter kit contains examples including

- Guide pages
- Navigation
- Customizations
- API Reference pages
- Use of popular components

### Development

Install the [Mintlify CLI](https://www.npmjs.com/package/mintlify) to preview the documentation changes locally. To install, use the following command

```
npm i -g mintlify
```

Run the following command at the root of your documentation (where mint.json is)

```
mintlify dev
```

### Publishing Changes

Install our Github App to auto propagate changes from your repo to your deployment. Changes will be deployed to production automatically after pushing to the default branch. Find the link to install on your dashboard. 

#### Troubleshooting

- Mintlify dev isn't running - Run `mintlify install` it'll re-install dependencies.
- Page loads as a 404 - Make sure you are running in a folder with `mint.json`


================================================
File: introduction.mdx
================================================
---
title: What is Stream Estate?
description: 'The Stream Estate API is designed to enable builders to easily query, observe, and automate on-chain real estate data and insights'
---
<Card
    title="API Reference"
    icon="code"
    href="api-reference"
  >
    Detailed technical information about our API, including its endpoints, methods, and responses.
  </Card>
<CardGroup cols={2}>

    <Card
    title="FAQ"
    icon="question"
    href="api-reference/faq"
  >
    Get answers to the most common questions and concerns about the use of our API.
  </Card>
  <Card
    title="Change Log"
    icon="map"
    href="https://verdant-strand-46f.notion.site/8b657e7b964840abac80acd5afbb683e"
  >
    Keep track of all modifications and updates made to the API over time.
  </Card>

  
</CardGroup>

================================================
File: mint.json
================================================
{
  "name": "Stream Estate API Documentation",
  "logo": {
    "dark": "/logo/dark.svg",
    "light": "/logo/light.svg"
  },
  "favicon": "/favicon.svg",
  "colors": {
    "primary": "#1d1f27",
    "light": "#ffffff",
    "dark": "#1d1f27",
    "background": {
    "dark": "#1d1f27",
    "light": "#EEEFE9"
    }
  },
  "api": {
    "baseUrl": "https://api.stream.estate",
    "auth": {
      "method": "key",
      "name": "X-API-KEY"
    } 
  },
  "anchors": [
    {
      "name": "API Reference",
      "icon": "rectangle-terminal",
      "url": "api-reference"
    },
    {
      "name": "Changelog",
      "icon": "list",
      "url": "https://verdant-strand-46f.notion.site/8b657e7b964840abac80acd5afbb683e"
    }
  ],
  "navigation": [
    {
      "group": "Welcome",
      "pages": [
        "introduction"
      ]
    },
    {
      "group": "Getting started",
      "pages": [
        "api-reference/concepts",
        "api-reference/authentication",
        "api-reference/errors",
        "api-reference/faq"
      ]
    },
    {
      "group": "Properties",
      "pages": [
        "api-reference/endpoint/properties/get_collection",
        "api-reference/endpoint/properties/get_single",
        "api-reference/endpoint/properties/get_similar"
      ]
    },
    {
      "group": "Indicators",
      "pages": [
        "api-reference/endpoint/indicators/price_per_meter",
        "api-reference/endpoint/indicators/points_of_interest",
        "api-reference/endpoint/indicators/locations"
      ]
    },
    {
      "group": "Searches",
      "pages": [
        "api-reference/endpoint/searches/get_collection",
        "api-reference/endpoint/searches/get_single",
        "api-reference/endpoint/searches/create",
        "api-reference/endpoint/searches/update",
        "api-reference/endpoint/searches/delete"
      ]
    },
    {
      "group": "Webhooks",
      "pages": [
        "api-reference/endpoint/webhooks/send"
      ]
    }
  ],
  "footerSocials": {
    "website": "https://stream.estate"
  }
}


================================================
File: api-reference/authentication.mdx
================================================
---
title: "Authentication"
---

Welcome to the beginning of your journey with our API. This page will guide you through the initial steps of understanding and utilizing our API to its fullest potential.

If you want to get an access and try out the API, please [sign up](https://stream.estate/signup) and create an API key in your settings. It is important to keep your API Key private and secure.

## Basic Example

All API calls require the `X-API-KEY` header. For an example of how to do this, see the code snippet below:

```bash Example Request
curl --location -g --request GET 'https://api.stream.estate/documents/properties/{id}' \
--header 'Content-Type: application/json' \
--header 'X-API-KEY: <api_key>' \
```

================================================
File: api-reference/concepts.mdx
================================================
---
title: "Concepts"
description: "The Concepts section provides clear definitions and explanations of key terms and concepts used throughout the API documentation"
---

```mermaid
graph TD
    P(Property)
    A1("Advert 1<br/>www.agency1.com/...")
    A2("Advert 2<br/>www.agency2.com/...")
    A3("Advert 3<br/>www.agency3.com/...")
    E11("Event 1.1<br/>Price decrease")
    E12("Event 1.2<br/>New photos")
    E31("Event 3.1<br/>Expired")   

    P --> A1
    P --> A2
    P --> A3
    A1 --> E11
    A1 --> E12    
    A3 --> E31    
```


| Concept      | Definition |
| -----------------| -------- |
| Property       | Refers to a specific real estate unit such as a house, apartment, or commercial space. Each property can have multiple adverts, which are different listings referring to the same unit.    |
| Advert       | Unique listing associated with a property. It's a specific presentation or promotion of a property in the real estate market by an agency or an individual.|
| Event       | An event is a specific occurrence or action within the system, such as the creation, update, or expiration of adverts, which can be tracked and responded to via the API.    |
| Match       | A match refers to a result that fulfills a user's saved search criteria, representing a new property that meets the specific conditions defined by the user in their search.    |
| Search   | A search is a user-defined entity that is saved and that allows for the real time retrieval of properties or adverts based on specific criteria, such as location, price range, or property type.      |
| Webhook   | A webhook is a tool that allows the API to send real-time data to a specified endpoint, such as notifying a user or system when a new advert matches a saved search criteria, or when an event occurs on a monitored search.       |
| lastCrawledAt | At property level, this field represents the date of the last update of the most recent advert, excluding expired ones. At the advert level, expired adverts are included.

================================================
File: api-reference/errors.mdx
================================================
---
title: "Error Codes"
description: "Error codes that can be returned by the API"
---

| Error Code | Description                                       |
|------------|---------------------------------------------------|
| 400        | Bad Request - Your request is incorrect           |
| 401        | Unauthorized - Your API key is wrong              |
| 403        | Forbidden - The action requested is not allowed   |
| 404        | Not Found - The requested resource could not be found |
| 405        | Method Not Allowed - You tried to access a resource with an invalid method |
| 429        | Too Many Requests - You're requesting too much! Slow down! |
| 500        | Internal Server Error - We had a problem with our server. Try again later |

================================================
File: api-reference/faq.mdx
================================================
---
title: "FAQ"
description: "This section of is aimed at collecting and answering common questions that developers may have when working with the API."
---

<AccordionGroup> 
  <Accordion title="How do I signup for the API?">
    If you want to get an access and try out the API, please [sign up](https://www.melo.io) and create an API key in your settings.
  </Accordion>
   <Accordion title="What is the timezone?">
    The timezone is set to `Europe/Paris`.
  </Accordion>
   <Accordion title="Can I send a request and only get the number of results?">
    Yes, in order to do that you have to send a request with `itemsPerPage=0` as a query parameter. Please note that count is limited to 10 000 results for `/documents/properties` endpoint.
  </Accordion>
   <Accordion title="I have some questions, where can I get help?">
    Please reach out using the chat on our our [Website](https://stream.estate), we're happy to answer you all your questions and get you started.
  </Accordion>
</AccordionGroup>

================================================
File: api-reference/introduction.mdx
================================================
---
title: What is Stream Estate?
description: 'The Stream Estate API is designed to enable builders to easily query, observe, and automate on-chain real estate data and insights'
---
<Card
    title="API Reference"
    icon="code"
    href="api-reference"
  >
    Detailed technical information about our API, including its endpoints, methods, and responses.
  </Card>
<CardGroup cols={2}>

    <Card
    title="FAQ"
    icon="question"
    href="api-reference/faq"
  >
    Get answers to the most common questions and concerns about the use of Stream Estate's API.
  </Card>
  <Card
    title="Change Log"
    icon="map"
    href="https://verdant-strand-46f.notion.site/8b657e7b964840abac80acd5afbb683e"
  >
    Keep track of all modifications and updates made to the API over time.
  </Card>
  
</CardGroup>

================================================
File: api-reference/endpoint/indicators/locations.mdx
================================================
---
title: "Locations"
api: "GET /public/location-autocomplete"
description: "This endpoint returns cities or departments matching the given criteria."
---

### Query parameters

<ParamField query="query" type="string" placeholder="paris">
Query term to perform search.
</ParamField>

<ParamField query="excludedCitiesIds[]" type="array">
Exclude cities using their IRI.
</ParamField>

<ParamField query="excludedDepartmentsIds[]" type="array">
Exclude departments using their IRI.
</ParamField>

<RequestExample>

```bash Example Request
curl --location -g --request GET 'https://api.stream.estate/public/location-autocomplete?q=paris' \
--header 'Content-Type: application/json' \
--header 'X-API-KEY: <api_key>'
```

</RequestExample>

<ResponseExample>

```json Example Response
{
  "hydra:member": [
    {
      "@id": "/cities/37087",
      "@type": "City",
      "code": "string",
      "displayName": "Lille (toute la ville)",
      "groupedCityNames": [
        "Capinghem",
        "Euralille",
        "Hellemmes lille",
        "Lezennes",
        "Lille",
        "Lomme"
      ],
      "groupedCityZipcodes": [
        "59000",
        "59160",
        "59260",
        "59777",
        "59800"
      ],
      "id": "37087",
      "insee": "59350",
      "libelle": "Lille",
      "location": {
        "lat": 50.629059,
        "lon": 3.06038
      },
      "name": "Lille",
      "zipcode": "59000"
    }
  ]
}
```

</ResponseExample>

================================================
File: api-reference/endpoint/indicators/points_of_interest.mdx
================================================
---
title: "Points of Interest"
api: "GET /indicators/points_of_interest"
description: "This endpoint returns the points of interests matching the given criterias."
---

### Query parameters

<ParamField query="facilities" type="array" placeholder="school, kindergarten, restaurant..." required>
  Category of points of interest. Current available categories are `kindergarten`, `school`, `restaurant`, `hospital`, `parking`.  Example: `facilities[]=kindergarten&facilities[]=school`
</ParamField>

<ParamField query="lat" type="number" required>
  Latitude.
</ParamField>

<ParamField query="lon" type="number" required>
  Longitude
</ParamField>

<ParamField query="radius" type="number" required>
  Distance expressed in kilometers.
</ParamField>

<RequestExample>
  ```bash Example Request
  curl --location -g --request GET 'https://api.stream.estate/indicators/points_of_interest?facilities[]=school&lat=48.8803424&lon=2.333215&radius=0.5' \
  --header 'Content-Type: application/json' \
  --header 'X-API-KEY: <api_key>'
  ```
</RequestExample>

<ResponseExample>
  ```json Example Response
  {
      "@context": "/contexts/POIResource",
      "@id": "/indicators/points_of_interest",
      "@type": "hydra:Collection",
      "hydra:member": [
          {
              "lat": 48.8830788,
              "lon": 2.3285289,
              "name": "École Maternelle Bruxelles",
              "type": "school",
              "attributes": {
                  "schoolType": "maternelle",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.8832816,
              "lon": 2.3287396,
              "name": "École Élémentaire Bruxelles",
              "type": "school",
              "attributes": {
                  "schoolType": "élémentaire",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.8780001,
              "lon": 2.3316352,
              "name": "École Maternelle",
              "type": "school",
              "attributes": {
                  "schoolType": "maternelle",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.8787347,
              "lon": 2.3280864,
              "name": "École Francaise Privée des Hautes Études Commerciales",
              "type": "school",
              "attributes": {
                  "schoolType": "lycée",
                  "operatorType": "private"
              }
          },
          {
              "lat": 48.8759626,
              "lon": 2.3322271,
              "name": "Collège privé pour handicapés Morvan",
              "type": "school",
              "attributes": {
                  "schoolType": "collège",
                  "operatorType": "private"
              }
          },
          {
              "lat": 48.8760006,
              "lon": 2.3322204,
              "name": "Lycée privé pour handicapés Morvan",
              "type": "school",
              "attributes": {
                  "schoolType": "secondaire",
                  "operatorType": "private"
              }
          },
          {
              "lat": 48.8809464,
              "lon": 2.3337578,
              "name": "École Primaire",
              "type": "school",
              "attributes": {
                  "schoolType": "primaire",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.88098,
              "lon": 2.3336251,
              "name": "École Maternelle",
              "type": "school",
              "attributes": {
                  "schoolType": "maternelle",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.8785422,
              "lon": 2.3350915,
              "name": "Cours Prive Hattemer",
              "type": "school",
              "attributes": {
                  "schoolType": "lycée",
                  "operatorType": "private"
              }
          },
          {
              "lat": 48.8779341,
              "lon": 2.3289236,
              "name": "Neoma",
              "type": "school",
              "attributes": []
          },
          {
              "lat": 48.8839359,
              "lon": 2.329592,
              "name": "Lycée Jules Ferry",
              "type": "school",
              "attributes": {
                  "schoolType": "lycée",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.8823203,
              "lon": 2.3352731,
              "name": "Section d'enseignement professionnel du Lycée polyvalent Edgar Quinet",
              "type": "school",
              "attributes": {
                  "schoolType": "lycée",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.8813464,
              "lon": 2.3391817,
              "name": "Lycée Edgar Quinet",
              "type": "school",
              "attributes": {
                  "schoolType": "lycée",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.8778096,
              "lon": 2.3307598,
              "name": "École élémentaire Clichy",
              "type": "school",
              "attributes": {
                  "schoolType": "élémentaire",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.8780035,
              "lon": 2.331446,
              "name": "École primaire Blanche",
              "type": "school",
              "attributes": {
                  "schoolType": "élémentaire",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.8781707,
              "lon": 2.3386731,
              "name": "École Notre-Dame de Lorette",
              "type": "school",
              "attributes": {
                  "schoolType": "primaire"
              }
          },
          {
              "lat": 48.8834526,
              "lon": 2.3381247,
              "name": "École primaire d'application Houdon",
              "type": "school",
              "attributes": {
                  "schoolType": "élémentaire",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.880935,
              "lon": 2.3264026,
              "name": "Collège Condorcet",
              "type": "school",
              "attributes": {
                  "schoolType": "collège",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.8790551,
              "lon": 2.3277605,
              "name": "École élémentaire privée La Trinité",
              "type": "school",
              "attributes": {
                  "schoolType": "élémentaire",
                  "operatorType": "private"
              }
          },
          {
              "lat": 48.8792941,
              "lon": 2.3387309,
              "name": "École maternelle Clauzel",
              "type": "school",
              "attributes": {
                  "schoolType": "maternelle",
                  "operatorType": "public"
              }
          },
          {
              "lat": 48.8832372,
              "lon": 2.3287064,
              "name": null,
              "type": "school",
              "attributes": []
          }
      ],
      "hydra:totalItems": 21,
      "hydra:view": {
          "@id": "/indicators/points_of_interest?facilities%5B%5D=school&lat=48.8803424&lon=2.333215&radius=0.5",
          "@type": "hydra:PartialCollectionView"
      }
  }
  ```
</ResponseExample>

================================================
File: api-reference/endpoint/indicators/price_per_meter.mdx
================================================
---
title: "Price / Meter Evolution"
api: "GET /indicators/price_per_meter"
description: "This endpoint returns the price per meter `average`, `median` and `time series` of properties matching the given criteria."
---

### Query parameters

<ParamField query="aggregationInterval" type="string" default="month" placeholder="month, year">
  Date histogram granularity for time series. Can be `month` or `year`.
</ParamField>

<ParamField query="bedroomMax" type="integer">
  The maximum number of bedrooms in the property.
</ParamField>

<ParamField query="bedroomMin" type="integer">
  The minimum number of bedrooms in the property.
</ParamField>

<ParamField query="budgetMax" type="integer">
  The maximum budget for the property.
</ParamField>

<ParamField query="budgetMin" type="integer">
  The minimum budget for the property.
</ParamField>

<ParamField query="condominiumFeesMax" type="integer">
  The maximum condominium fees for the property.
</ParamField>

<ParamField query="condominiumFeesMin" type="integer">
  The minimum condominium fees for the property.
</ParamField>

<ParamField query="constructionYearMax" type="integer">
  The maximum construction year of the property.
</ParamField>

<ParamField query="constructionYearMin" type="integer">
  The minimum construction year of the property.
</ParamField>

<ParamField query="energyCategories" type="array">
  The energy efficiency categories of the property.
</ParamField>

<ParamField query="energyValueMax" type="integer">
  The maximum energy value of the property.
</ParamField>

<ParamField query="energyValueMin" type="integer">
  The minimum energy value of the property.
</ParamField>

<ParamField query="eventPriceVariationFromCreatedAt" type="date">
  The date from which an event of type price is created (inclusive).
</ParamField>

<ParamField query="eventPriceVariationMax" type="number">
  The maximum variation of an event of type price. Expressed in percent.
</ParamField>

<ParamField query="eventPriceVariationMin" type="number">
  The minimum variation of an event of type price. Expressed in percent.
</ParamField>

<ParamField query="eventPriceVariationToCreatedAt" type="date">
  The date before which an event of type price is created (inclusive).
</ParamField>

<ParamField query="eventSurfaceVariationFromCreatedAt" type="date">
  The date from which an event of type surface is created (inclusive).
</ParamField>

<ParamField query="eventSurfaceVariationMax" type="number">
  The maximum variation of an event of type surface. Expressed in percent.
</ParamField>

<ParamField query="eventSurfaceVariationMin" type="number">
  The minimum variation of an event of type surface. Expressed in percent.
</ParamField>

<ParamField query="eventSurfaceVariationToCreatedAt" type="date">
  The date before which an event of type surface is created (inclusive).
</ParamField>

<ParamField query="excludedCities" type="array">
  Cities to be excluded.
</ParamField>

<ParamField query="excludedInseeCodes" type="array">
  Insee codes to be excluded.
</ParamField>

<ParamField query="excludedProperties" type="array">
  Properties to be excluded.
</ParamField>

<ParamField query="excludedZipcodes" type="array">
  Zipcodes to be excluded.
</ParamField>

<ParamField query="expired" type="boolean">
  Filter for expired properties.
</ParamField>

<ParamField query="expressions" type="array">
  Full text matching including/excluding words & phrases in the title or the description of the property.
  Example: `expressions[0][0][word]=travaux&expressions[0][0][options][includes]=true&expressions[0][0][options][strict]=false&expressions[0][1][word]=lumineux&expressions[0][1][options][includes]=true&expressions[0][1][options][strict]=false` which will search for properties that contain both the keywords `lumineux` and `travaux`.
</ParamField>

<ParamField query="feesPercentageMax" type="number">
  The maximum percentage of fees.
</ParamField>

<ParamField query="feesPercentageMin" type="number">
  The minimum percentage of fees.
</ParamField>

<ParamField query="feesResponsibility" type="integer">
  Responsibility for fees (0 for seller, 1 for purchaser).
</ParamField>

<ParamField query="floorQuantityMax" type="integer">
  The maximum number of floors in the property.
</ParamField>

<ParamField query="floorQuantityMin" type="integer">
  The minimum number of floors in the property.
</ParamField>

<ParamField query="fromDate" type="date">
  The date from which the property is created (inclusive).
</ParamField>

<ParamField query="fromUpdatedAt" type="date">
  The date from which the property is updated (inclusive).
</ParamField>

<ParamField query="furnished" type="boolean">
  Filter for furnished properties.
</ParamField>

<ParamField query="greenHouseGasCategories" type="array">
  Green house gas performance letter array of the property.
</ParamField>

<ParamField query="greenHouseGasValueMax" type="integer">
  The maximum value of green house gas of the property.
</ParamField>

<ParamField query="greenHouseGasValueMin" type="integer">
  The minimum value of green house gas of the property.
</ParamField>

<ParamField query="includedCities" type="array">
  Located in given cities. Example: includedCities\[]=/cities/30953\&includedCities\[]=/cities/30952
</ParamField>

<ParamField query="includedDepartments" type="array">
  Located in given departments. Example: includedDepartments\[]=includedDepartments\[]=/departments/77
</ParamField>

<ParamField query="includedInseeCodes" type="array">
  Located in given insee codes. Example: includedInseeCodes\[]=75117\&includedInseeCodes\[]=75118
</ParamField>

<ParamField query="includedZipcodes" type="array">
  Located in given zipcodes. Example: includedZipcodes\[]=75017\&includedZipcodes\[]=75018
</ParamField>

<ParamField query="inventoryPriceMax" type="number">
  Lower than or equal to inventoryPriceMax. Example: inventoryPriceMax=500
</ParamField>

<ParamField query="inventoryPriceMin" type="number">
  Greater than or equal to inventoryPriceMin. Example: inventoryPriceMin=250
</ParamField>

<ParamField query="itemsPerPage" type="integer" default="30">
  The number of items per page. Max is 30.
</ParamField>

<ParamField query="lat" type="number">
  Latitude. Used if radius & lat/lon are set. Example: lat=48.864716
</ParamField>

<ParamField query="lon" type="number">
  Longitude. Used if radius & lat/lon are given. Example: lon=2.349014
</ParamField>

<ParamField query="lotCountMax" type="integer">
  Lower than or equal to lotCountMax. Example: lotCountMax=12
</ParamField>

<ParamField query="lotCountMin" type="integer">
  Greater than or equal to lotCountMin. Example: lotCountMin=4
</ParamField>

<ParamField query="order[createdAt]" type="integer" default="desc">
  Order properties by creation date.
</ParamField>

<ParamField query="order[updatedAt]" type="integer">
  Order properties by update date.
</ParamField>

<ParamField query="page" type="integer" default="1">
  The collection page number.
</ParamField>

<ParamField query="priceExcludingFeesMax" type="number">
  Lower than or equal to priceExcludingFeesMax. Example: priceExcludingFeesMax=427500
</ParamField>

<ParamField query="priceExcludingFeesMin" type="number">
  Greater than or equal to priceExcludingFeesMin. Example: priceExcludingFeesMin=405000
</ParamField>

<ParamField query="pricePerMeterMax" type="integer">
  Lower than or equal to pricePerMeterMax. Example: pricePerMeterMax=11500
</ParamField>

<ParamField query="pricePerMeterMin" type="integer">
  Greater than or equal to pricePerMeterMin. Example: pricePerMeterMin=9500
</ParamField>

<ParamField query="propertyTypes" type="array">
  0: FLAT, 1: HOUSE, 2: BUILDING, 3: PARKING, 4: OFFICE, 5: LAND, 6: SHOP
</ParamField>

<ParamField query="publisherTypes" type="array">
  0 : INDIVIDUAL, 1 : PROFESSIONAL
</ParamField>

<ParamField query="radius" type="integer">
  Distance expressed in kilometers. Used if lat & lon are set. Example: radius=20
</ParamField>

<ParamField query="rentalChargesMax" type="number">
  Lower than or equal to rentalChargesMax. Example: rentalChargesMax=100
</ParamField>

<ParamField query="rentalChargesMin" type="number">
  Greater than or equal to rentalChargesMin. Example: rentalChargesMin=50
</ParamField>

<ParamField query="rentalPledgeMax" type="number">
  Lower than or equal to rentalPledgeMax. Example: rentalPledgeMax=800
</ParamField>

<ParamField query="rentalPledgeMin" type="number">
  Greater than or equal to rentalPledgeMin. Example: rentalPledgeMin=500
</ParamField>

<ParamField query="renterFeesMax" type="number">
  Lower than or equal to renterFeesMax. Example: renterFeesMax=80
</ParamField>

<ParamField query="renterFeesMin" type="number">
  Greater than or equal to renterFeesMin. Example: renterFeesMin=50
</ParamField>

<ParamField query="roomMax" type="integer">
  Having maximum x rooms. Example: roomMax=6
</ParamField>

<ParamField query="roomMin" type="integer">
  Having minimum x rooms. Example: roomMin=3
</ParamField>

<ParamField query="sortMode" type="string" default="property">
  Property: fromDate/toDate criteria will be applied to property root object. Items will be sorted by property createdAt dates. Advert: fromDate/toDate criteria will be applied to adverts nested objects. Items will be sorted by advert createdAt dates. Example: sortMode=property
</ParamField>

<ParamField query="surfaceMax" type="integer">
  Lower than or equal to surfaceMax. Example: surfaceMax=84
</ParamField>

<ParamField query="surfaceMin" type="integer">
  Greater than or equal to surfaceMin. Example: surfaceMin=42
</ParamField>

<ParamField query="toDate" type="date">
  To datetime (inclusive). Example: toDate=2021-05-07 12:42:42
</ParamField>

<ParamField query="toUpdatedAt" type="date">
  Since datetime (inclusive). Example: toUpdatedAt=2021-05-07 12:42:42
</ParamField>

<ParamField query="transactionType" type="integer">
  0 : SELL, 1 : RENT
</ParamField>

<ParamField query="withCoherentPrice" type="boolean" default="true">
  Filter properties with coherent price. Example: withCoherentPrice=true
</ParamField>

<ParamField query="withVirtualTour" type="boolean">
  Having a virtual tour video link. Example: withVirtualTour=true
</ParamField>

<RequestExample>
  ```bash Example Request
  curl --location -g --request GET 'https://api.stream.estate/indicators/price_per_meter?includedDepartments[]=departments/77&fromDate=2020-01-10&propertyTypes[]=1&transactionType=0&withCoherentPrice=true&budgetMin=1800000&budgetMax=1900000' \
  --header 'Content-Type: application/json' \
  --header 'X-API-KEY: <api_key>'
  ```
</RequestExample>

<ResponseExample>
  ```json Example Response
  {
    "hydra:member": [
      {
      "average": 7532.48,
      "average_min": 6250.75,
      "average_max": 8814.21,
      "median": 7601.50,
      "series": {
          "2023-01": 7450.60,
          "2023-02": 7520.00,
          "2023-03": 7605.30,
          "2023-04": 7680.40,
          "2023-05": 7750.50,
          "2023-06": 7820.60,
          "2023-07": 7890.70,
          "2023-08": 7960.80,
          "2023-09": 8030.90,
          "2023-10": 8101.00,
          "2023-11": 8171.10,
          "2023-12": 8241.20
      }
  }
    ],
    "hydra:totalItems": 0,
    "hydra:view": {
      "@id": "string",
      "@type": "string",
      "hydra:first": "string",
      "hydra:last": "string",
      "hydra:next": "string"
    },
    "hydra:search": {
      "@type": "string",
      "hydra:template": "string",
      "hydra:variableRepresentation": "string",
      "hydra:mapping": [
        {
          "@type": "string",
          "variable": "string",
          "property": "string",
          "required": true
        }
      ]
    }
  }
  ```
</ResponseExample>

================================================
File: api-reference/endpoint/properties/get_collection.mdx
================================================
---
title: "Properties"
api: "GET /documents/properties"
description: "Returns a collection of properties matching given criteria."
---

### Query parameters

<ParamField query="bedroomMax" type="number">
  Maximum number of bedrooms in the property.
</ParamField>

<ParamField query="bedroomMin" type="number">
  Minimum number of bedrooms in the property.
</ParamField>

<ParamField query="budgetMax" type="number">
  Maximum budget for the property.
</ParamField>

<ParamField query="budgetMin" type="number">
  Minimum budget for the property.
</ParamField>

<ParamField query="condominiumFeesMax" type="number">
  Maximum condominium fees for the property.
</ParamField>

<ParamField query="condominiumFeesMin" type="number">
  Minimum condominium fees for the property.
</ParamField>

<ParamField query="constructionYearMax" type="number">
  Maximum construction year of the property.
</ParamField>

<ParamField query="constructionYearMin" type="number">
  Minimum construction year of the property.
</ParamField>

<ParamField query="energyCategories" type="array">
  The energy efficiency categories of the property.
</ParamField>

<ParamField query="energyValueMax" type="number">
  Maximum energy value of the property.
</ParamField>

<ParamField query="energyValueMin" type="number">
  Minimum energy value of the property.
</ParamField>

<ParamField query="eventPriceVariationFromCreatedAt" type="date">
  Date from which an event of type price is created — inclusive.
</ParamField>

<ParamField query="eventPriceVariationMax" type="number">
  Maximum percent variation of an event of type price.
</ParamField>

<ParamField query="eventPriceVariationMin" type="number">
  Minimum percent variation of an event of type price.
</ParamField>

<ParamField query="eventPriceVariationToCreatedAt" type="date">
  Date before which an event of type price is created — inclusive.
</ParamField>

<ParamField query="eventSurfaceVariationFromCreatedAt" type="date">
  Date from which an event of type surface is created — inclusive.
</ParamField>

<ParamField query="eventSurfaceVariationMax" type="number">
  Maximum percent variation of an event of type surface.
</ParamField>

<ParamField query="eventSurfaceVariationMin" type="number">
  Minimum percent variation of an event of type surface.
</ParamField>

<ParamField query="eventSurfaceVariationToCreatedAt" type="date">
  Date before which an event of type surface is created — inclusive.
</ParamField>

<ParamField query="excludedCities" type="array">
  Cities to be excluded.
</ParamField>

<ParamField query="excludedInseeCodes" type="array">
  Insee codes to be excluded.
</ParamField>

<ParamField query="excludedProperties" type="array">
  Properties to be excluded.
</ParamField>

<ParamField query="excludedSites" type="array">
  Sources sites to be excluded.
</ParamField>

<ParamField query="excludedZipcodes" type="array">
  Zipcodes to be excluded.
</ParamField>

<ParamField query="expired" type="boolean" default="null">
  Whether to show properties that are expired. A property is considered expired when all its adverts are expired. Can be `true`, `false` or `null`. Default is `null` which returns all properties no matter if they're expired or not.
</ParamField>

<ParamField query="expressions" type="array">
  Full text matching including/excluding words & phrases in the title or the description of the property.
  Example: `expressions[0][0][word]=travaux&expressions[0][0][options][includes]=true&expressions[0][0][options][strict]=false&expressions[0][1][word]=lumineux&expressions[0][1][options][includes]=true&expressions[0][1][options][strict]=false` which will search for properties that contain both the keywords `lumineux` and `travaux`.
</ParamField>

<ParamField query="feesPercentageMax" type="number">
  Maximum percentage of fees.
</ParamField>

<ParamField query="feesPercentageMin" type="number">
  Minimum percentage of fees.
</ParamField>

<ParamField query="feesResponsibility" type="number">
  Responsibility for fees. `0` for seller, `1` for buyer.
</ParamField>

<ParamField query="floorQuantityMax" type="number">
  Maximum number of floors in the property.
</ParamField>

<ParamField query="floorQuantityMin" type="number">
  Minimum number of floors in the property.
</ParamField>

<ParamField query="fromDate" type="date">
  Date from which the property is created — inclusive.
</ParamField>

<ParamField query="fromExpiredAt" type="date">
  Date from which the advert is expired — inclusive.
</ParamField>

<ParamField query="fromUpdatedAt" type="date">
  Date from which the property is updated — inclusive.
</ParamField>

<ParamField query="furnished" type="boolean">
  Filter for furnished properties.
</ParamField>

<ParamField query="greenHouseGasCategories" type="array">
  Green house gas performance letter array of the property.
</ParamField>

<ParamField query="greenHouseGasValueMax" type="number">
  Maximum value of green house gas of the property.
</ParamField>

<ParamField query="greenHouseGasValueMin" type="number">
  Minimum value of green house gas of the property.
</ParamField>

<ParamField query="includedCities" type="array" >
  Located in given cities. Example: `includedCities[]=/cities/30953&includedCities[]=/cities/30952`. Use [locations](/api-reference/endpoint/indicators/locations) to get the desired city ids.
</ParamField>

<ParamField query="includedDepartments" type="array" >
  Located in given departments. Example: `includedDepartments[]=/departments/77`. Use [locations](/api-reference/endpoint/indicators/locations) to get the desired department ids.
</ParamField>

<ParamField query="includedInseeCodes" type="array">
  Located in given insee codes. Example: `includedInseeCodes[]=75117&includedInseeCodes[]=75118`
</ParamField>

<ParamField query="includedSites" type="array">
  Sources sites to be included.
</ParamField>

<ParamField query="includedZipcodes" type="array">
  Located in given zipcodes. Example: `includedZipcodes[]=75017&includedZipcodes[]=75018`
</ParamField>

<ParamField query="inventoryPriceMax" type="number" >
  Lower than or equal to given inventory price. Example: `inventoryPriceMax=500`
</ParamField>

<ParamField query="inventoryPriceMin" type="number" >
  Greater than or equal to given inventory price. Example: `inventoryPriceMin=250`
</ParamField>

<ParamField query="itemsPerPage" type="number" default="10">
  The number of items per page. Max is `30`.
</ParamField>

<ParamField body="landSurfaceMax" type="number" >
  Maximum land surface.
</ParamField>

<ParamField body="landSurfaceMin" type="number"  >
  Minimum land surface.
</ParamField>

<ParamField query="lat" type="number" >
  Latitude. Will work if latitude exists in the property. Example: `lat=48.864716`
</ParamField>

<ParamField query="lon" type="number">
  Longitude. Will work if latitude exists in the property. Example: `lon=2.349014`
</ParamField>

<ParamField query="lotCountMax" type="number" >
  Lower than or equal to given lot count. Example: `lotCountMax=12`
</ParamField>

<ParamField query="lotCountMin" type="number" >
  Greater than or equal to given lot count. Example: `lotCountMin=4`
</ParamField>

<ParamField query="order[createdAt]" type="string"  default="desc">
  Order properties by creation date. Can be `asc` or `desc`.
</ParamField>

<ParamField query="order[pricePerMeter]" type="string"  default="desc">
  Order properties by price per meter. Can be `asc` or `desc`.
</ParamField>

<ParamField query="order[price]" type="string">
  Order properties by price. Can be `asc` or `desc`.
</ParamField>

<ParamField query="order[surface]" type="string">
  Order properties by surface. Can be `asc` or `desc`.
</ParamField>

<ParamField query="order[updatedAt]" type="string">
  Order properties by update date. Can be `asc` or `desc`.
</ParamField>

<ParamField query="page" type="integer" default="1">
  The collection page number.
</ParamField>

<ParamField query="priceExcludingFeesMax" type="number" >
  Lower than or equal to given price excluding fees. Example: `priceExcludingFeesMax=427500`
</ParamField>

<ParamField query="priceExcludingFeesMin" type="number" >
  Greater than or equal to given price excluding fees. Example: `priceExcludingFeesMin=405000`
</ParamField>

<ParamField query="pricePerMeterMax" type="number" >
  Lower than or equal to given price per meter. Example: `pricePerMeterMax=11500`
</ParamField>

<ParamField query="pricePerMeterMin" type="number" >
  Greater than or equal to given price per meter. Example: `pricePerMeterMin=9500`
</ParamField>

<ParamField query="propertyTypes" type="array">
  Type of property. Apartment `0`, House `1`, Building `2`, Parking `3`, Office `4`, Land `5`, Shop `6`. Example: `propertyTypes[]=0&propertyTypes[]=1`
</ParamField>

<ParamField query="publisherTypes" type="array">
  Type of publisher. Individual `0`, Professional `1`. Example: `publisherTypes[]=0&publisherTypes[]=1`
</ParamField>

<ParamField query="radius" type="integer" >
  Distance expressed in kilometers. Will work if latitude & longitude parameters are also set. Example: `radius=20`
</ParamField>

<ParamField query="rentalChargesMax" type="number" >
  Lower than or equal to given rental charges amount. Example: `rentalChargesMax=100`
</ParamField>

<ParamField query="rentalChargesMin" type="number" >
  Greater than or equal to given rental charges amount. Example: `rentalChargesMin=50`
</ParamField>

<ParamField query="rentalPledgeMax" type="number" >
  Lower than or equal to given rental pledge amount. Example: `rentalPledgeMax=800`
</ParamField>

<ParamField query="rentalPledgeMin" type="number" >
  Greater than or equal to given rental pledge amount. Example: `rentalPledgeMin=500`
</ParamField>

<ParamField query="renterFeesMax" type="number" >
  Lower than or equal to given renter fees. Example: `renterFeesMax=80`
</ParamField>

<ParamField query="renterFeesMin" type="number" >
  Greater than or equal to given renter fees. Example: `renterFeesMin=50`
</ParamField>

<ParamField query="roomMax" type="number" >
  Maximum rooms of the property. Example: `roomMax=6`
</ParamField>

<ParamField query="roomMin" type="number" >
  Minimum rooms of the property. Example: `roomMin=3`
</ParamField>

<ParamField query="sortMode" type="string"  default="property">
  Whether to sort results by properties or by adverts. 
  
  If `property` is chosen, `fromDate` and `toDate` parameters will be ***overridden*** so that the results will be sorted by the `createdAt` of each `property`. 
  
  If `advert` is chosen: `fromDate` and `toDate` parameters will be ***overridden*** so that the results will be sorted by `createdAt` of each `advert`.
  
  Example: `sortMode=property`
  
  Please check our [glossary](/glossary) for more information about the distinction between adverts and properties.
</ParamField>

<ParamField query="surfaceMax" type="number" >
  Lower than or equal to given surface. Example: `surfaceMax=84`
</ParamField>

<ParamField query="surfaceMin" type="number" >
  Greater than or equal to given surface. Example: `surfaceMin=42`
</ParamField>

<ParamField query="toDate" type="date" >
  Date until which the ***property*** is created  — inclusive. Example: `toDate=2021-05-07 12:42:42`
</ParamField>

<ParamField query="toExpiredAt" type="date">
  Date from which the ***advert*** is expired — inclusive.
  Example: `toExpiredAt=2021-05-07 12:42:42`
</ParamField>

<ParamField query="toUpdatedAt" type="date" >
  Date until which the ***property*** is updated — inclusive. Example: `toUpdatedAt=2021-05-07 12:42:42`
</ParamField>

<ParamField query="transactionType" type="integer" >
  Type of transaction. Sell `0`, Rent `1`. Example: `transactionType=0`
</ParamField>

<ParamField query="withCoherentPrice" type="boolean"  default="true">
  Filter properties with coherent price. Example: `withCoherentPrice=true`
</ParamField>

<ParamField query="withVirtualTour" type="boolean" >
  Having a virtual tour video link. Example: `withVirtualTour=true`
</ParamField>

<RequestExample>

```bash cURL
curl --location -g --request GET 'https://api.stream.estate/documents/properties?includedDepartments[]=departments/77&fromDate=2020-01-10&propertyTypes[]=1&transactionType=0&withCoherentPrice=true&budgetMin=1800000&budgetMax=1900000' \
--header 'Content-Type: application/json' \
--header 'X-API-KEY: <api_key>'
```

```python Python
import requests
import json

url = "https://api.stream.estate/documents/properties"

params = {
    'includedDepartments[]': 'departments/77',
    'fromDate': '2020-01-10',
    'propertyTypes[]': '1',
    'transactionType': '0',
    'withCoherentPrice': 'true',
    'budgetMin': '1800000',
    'budgetMax': '1900000'
}

headers = {
  'Content-Type': 'application/json',
  'X-API-KEY': '<api_key>'
}

response = requests.request("GET", url, headers=headers, params=params)

print(response.json())
```

</RequestExample>

<ResponseExample>

```json Example Response
{
  "hydra:member": [
    {
      "@context": "/contexts/PropertyDocument",
      "@id": "/documents/properties/a2fe8869-bbd8-4d92-ad22-5ca5511a5bc7",
      "@type": "PropertyDocument",
      "adverts": [
        {
          "condominiumFees": 1200,
          "constructionYear": 1982,
          "contact": {
            "agency": "Agence Immo 2000",
            "email": "contact@agenceimmo2000.fr",
            "fax": "0120304050",
            "name": "Olivie Olivier",
            "phone": "0120304050",
            "reference": "B42042"
          },
          "createdAt": "2023-05-23T23:48:47+02:00",
          "description": "Bel appartement « coup de coeur » 2 pieces Sans perte d’espace, lumineux, poutres, parquet massif, belle hauteur sous plafonds, entièrement refait à neuf avec fenêtres double vitrage, volets roulants, porte blindée, cuisine entièrement équipée, salle d’eau avec fenêtre, idéalement situé...",
          "elevator": true,
          "energy": {
            "category": "C",
            "value": 117
          },
          "events": [
            {
              "createdAt": "2023-05-23T23:48:47+02:00",
              "fieldName": "price",
              "fieldNewValue": "950",
              "fieldOldValue": "995",
              "percentVariation": -4.52
            }
          ],
          "features": [
            "Grand balcon",
            "Bâtiment de 5 étages",
            "Lumineux",
            "Coin cuisine"
          ],
          "feesPercentage": 10,
          "feesResponsibility": 0,
          "floor": 6,
          "floorQuantity": 6,
          "furnished": true,
          "greenHouseGas": {
            "category": "D",
            "value": 32
          },
          "inventoryPrice": 350,
          "landSurface": 300,
          "lastCrawledAt": "2023-05-23T23:48:47+02:00",
          "lotCount": 12,
          "pictures": [
            "https://pictures.notif.immo/properties/2021/05/10/10/a20cbdc44632c63f89aad2e6d9d049.jpg",
            "https://pictures.notif.immo/properties/2021/05/10/10/b0935cb714d501c668b66997d7f16a.jpg",
            "https://pictures.notif.immo/properties/2021/05/10/10/7e1ea590d4b827e9a8a762e7f378fb.jpg"
          ],
          "picturesRemote": [
            "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_45D57CD0-7D18-4FA0-B463-060789202625.jpg",
            "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_39192DB9-A503-4FD7-AEDB-3DEFFE35E42E.jpg",
            "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_FDDEC9E3-8A85-4BE5-83B8-12005A2D4078.jpg"
          ],
          "price": 950,
          "priceExcludingFees": 1800000,
          "publisher": {
            "category": "Portails",
            "name": "Century21",
            "type": 1
          },
          "rentalCharges": 75,
          "rentalPledge": 1000,
          "renterFees": 60,
          "surface": 30,
          "title": "Appartement 2 pieces",
          "updatedAt": "2023-05-23T23:48:47+02:00",
          "url": "https://www.century21.fr/trouver_logement/detail/2424196788/",
          "uuid": "21f2a17b-dae3-4ea4-976f-e521cebfe609",
          "virtualTour": "https://my.matterport.com/show/?m=9GnMTmZgY44"
        }
      ],
      "bedroom": 2,
      "city": {
        "cityParentId": 0,
        "country": {
          "code": "250",
          "id": 2,
          "name": "France"
        },
        "department": {
          "code": "75",
          "id": 77,
          "name": "Paris"
        },
        "groupedCityNames": [
          "string"
        ],
        "groupedCityZipcodes": [
          "string"
        ],
        "hasGroupedByName": false,
        "hasGroupedByZipcode": false,
        "id": 30950,
        "insee": "75116",
        "locations": {
          "lat": 48.8530933,
          "lon": 2.2487626
        },
        "name": "Paris 18e",
        "open": true,
        "originalName": "Paris 18e",
        "region": {
          "code": "11",
          "id": 7,
          "name": "Île-de-France"
        },
        "zipcode": "75018"
      },
      "createdAt": "2023-05-23T23:48:47+02:00",
      "description": "Bel appartement « coup de coeur » 2 pieces Sans perte d’espace, lumineux, poutres, parquet massif, belle hauteur sous plafonds, entièrement refait à neuf avec fenêtres double vitrage, volets roulants, porte blindée, cuisine entièrement équipée, salle d’eau avec fenêtre, idéalement situé...",
      "elevator": true,
      "expired": true,
      "expiredAt": "2023-05-23T23:48:47+02:00",
      "floor": 6,
      "furnished": true,
      "landSurface": 300,
      "lastCrawledAdvert": "21f2a17b-dae3-4ea4-976f-e521cebfe609",
      "lastCrawledAt": "2023-05-23T23:48:47+02:00",
      "locations": {
        "lat": 48.8530933,
        "lon": 2.2487626
      },
      "pictures": [
        "https://pictures.notif.immo/properties/2021/05/10/10/a20cbdc44632c63f89aad2e6d9d049.jpg",
        "https://pictures.notif.immo/properties/2021/05/10/10/b0935cb714d501c668b66997d7f16a.jpg",
        "https://pictures.notif.immo/properties/2021/05/10/10/7e1ea590d4b827e9a8a762e7f378fb.jpg"
      ],
      "price": 950,
      "pricePerMeter": 31.66,
      "property": "/properties/a2fe8869-bbd8-4d92-ad22-5ca5511a5bc7",
      "propertyType": 0,
      "publisherTypes": [
        1
      ],
      "room": 3,
      "stations": [
        {
          "id": 33,
          "lines": [
            {
              "color": "#128B5B",
              "id": 20,
              "name": "Ligne 12",
              "number": "12",
              "routeName": "Front Populaire ↔ Mairie d’Issy"
            }
          ],
          "name": "Jules Joffrin"
        },
        {
          "id": 191,
          "lines": [
            {
              "color": "#B94D9A",
              "id": 11,
              "name": "Ligne 4",
              "number": "4",
              "routeName": "Porte de Clignancourt ↔ Mairie de Montrouge"
            },
            {
              "color": "#128B5B",
              "id": 20,
              "name": "Ligne 12",
              "number": "12",
              "routeName": "Front Populaire ↔ Mairie d’Issy"
            }
          ],
          "name": "Marcadet-Poissonniers"
        }
      ],
      "surface": 30,
      "title": "Appartement 2 pieces",
      "transactionType": 1,
      "updatedAt": "2023-05-23T23:48:47+02:00",
      "uuid": "38cb65b9-2965-4bd0-bc9b-2b8a8be7c457"
    }
  ],
  "hydra:totalItems": 0,
  "hydra:view": {
    "@id": "string",
    "@type": "string",
    "hydra:first": "string",
    "hydra:last": "string",
    "hydra:next": "string"
  },
  "hydra:search": {
    "@type": "string",
    "hydra:template": "string",
    "hydra:variableRepresentation": "string",
    "hydra:mapping": [
      {
        "@type": "string",
        "variable": "string",
        "property": "string",
        "required": true
      }
    ]
  }
}
```

</ResponseExample>

================================================
File: api-reference/endpoint/properties/get_similar.mdx
================================================
---
title: "Similar Properties"
api: "GET /documents/properties/{id}/similar-properties"
description: "Returns a collection of properties similar to given property."
---

### Path parameters

<ParamField path="id" type="string" required>
  UUID of the selected property
</ParamField>

### Query parameters

<ParamField query="fromDate" type="date">
  Date from which the property is created — inclusive.
</ParamField>

<ParamField query="itemsPerPage" type="integer" default="10">
  The number of items per page. Max is `30`.
</ParamField>

<ParamField query="order[createdAt]" type="string" default="desc">
  Order properties by creation date. Can be `asc` or `desc`.
</ParamField>

<ParamField query="order[pricePerMeter]" type="string" default="desc">
  Order properties by price per meter. Can be `asc` or `desc`.
</ParamField>

<ParamField query="order[price]" type="string">
  Order properties by price. Can be `asc` or `desc`.
</ParamField>

<ParamField query="order[surface]" type="string">
  Order properties by surface. Can be `asc` or `desc`.
</ParamField>

<ParamField query="order[updatedAt]" type="string">
  Order properties by update date. Can be `asc` or `desc`.
</ParamField>

<ParamField query="page" type="integer" default="1">
  The collection page number.
</ParamField>

<RequestExample>
  ```bash Example Request
  curl --location -g --request GET 'https://api.stream.estate/documents/properties/{id}/similar-properties' \
  --header 'Content-Type: application/json' \
  --header 'X-API-KEY: <api_key>' \
  ```
</RequestExample>

<ResponseExample>
  ```json Example Response
  {
    "hydra:member": [
      {
        "@context": "/contexts/PropertyDocument",
        "@id": "/documents/properties/a2fe8869-bbd8-4d92-ad22-5ca5511a5bc7",
        "@type": "PropertyDocument",
        "adverts": [
          {
            "condominiumFees": 1200,
            "constructionYear": 1982,
            "contact": {
              "agency": "Agence Immo 2000",
              "email": "contact@agenceimmo2000.fr",
              "fax": "0120304050",
              "name": "Olivie Olivier",
              "phone": "0120304050",
              "reference": "B42042"
            },
            "createdAt": "2023-06-28T18:03:13+02:00",
            "description": "Bel appartement « coup de coeur » 2 pieces Sans perte d’espace, lumineux, poutres, parquet massif, belle hauteur sous plafonds, entièrement refait à neuf avec fenêtres double vitrage, volets roulants, porte blindée, cuisine entièrement équipée, salle d’eau avec fenêtre, idéalement situé...",
            "elevator": true,
            "energy": {
              "category": "C",
              "value": 117
            },
            "events": [
              {
                "createdAt": "2023-06-28T18:03:13+02:00",
                "fieldName": "price",
                "fieldNewValue": "950",
                "fieldOldValue": "995",
                "percentVariation": -4.52
              }
            ],
            "features": [
              "Grand balcon",
              "Bâtiment de 5 étages",
              "Lumineux",
              "Coin cuisine"
            ],
            "feesPercentage": 10,
            "feesResponsibility": 0,
            "floor": 6,
            "floorQuantity": 6,
            "furnished": true,
            "greenHouseGas": {
              "category": "D",
              "value": 32
            },
            "inventoryPrice": 350,
            "landSurface": 300,
            "lastCrawledAt": "2023-06-28T18:03:13+02:00",
            "lotCount": 12,
            "pictures": [
              "https://pictures.notif.immo/properties/2021/05/10/10/a20cbdc44632c63f89aad2e6d9d049.jpg",
              "https://pictures.notif.immo/properties/2021/05/10/10/b0935cb714d501c668b66997d7f16a.jpg",
              "https://pictures.notif.immo/properties/2021/05/10/10/7e1ea590d4b827e9a8a762e7f378fb.jpg"
            ],
            "picturesRemote": [
              "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_45D57CD0-7D18-4FA0-B463-060789202625.jpg",
              "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_39192DB9-A503-4FD7-AEDB-3DEFFE35E42E.jpg",
              "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_FDDEC9E3-8A85-4BE5-83B8-12005A2D4078.jpg"
            ],
            "price": 950,
            "priceExcludingFees": 1800000,
            "publisher": {
              "category": "Portails",
              "name": "Century21",
              "type": 1
            },
            "rentalCharges": 75,
            "rentalPledge": 1000,
            "renterFees": 60,
            "surface": 30,
            "title": "Appartement 2 pieces",
            "updatedAt": "2023-06-28T18:03:13+02:00",
            "url": "https://www.century21.fr/trouver_logement/detail/2424196788/",
            "uuid": "21f2a17b-dae3-4ea4-976f-e521cebfe609",
            "virtualTour": "https://my.matterport.com/show/?m=9GnMTmZgY44"
          }
        ],
        "bedroom": 2,
        "city": {
          "cityParentId": 0,
          "country": {
            "code": "250",
            "id": 2,
            "name": "France"
          },
          "department": {
            "code": "75",
            "id": 77,
            "name": "Paris"
          },
          "groupedCityNames": [
            "string"
          ],
          "groupedCityZipcodes": [
            "string"
          ],
          "hasGroupedByName": false,
          "hasGroupedByZipcode": false,
          "id": 30950,
          "insee": "75116",
          "locations": {
            "lat": 48.8530933,
            "lon": 2.2487626
          },
          "name": "Paris 18e",
          "open": true,
          "originalName": "Paris 18e",
          "region": {
            "code": "11",
            "id": 7,
            "name": "Île-de-France"
          },
          "zipcode": "75018"
        },
        "createdAt": "2023-06-28T18:03:13+02:00",
        "description": "Bel appartement « coup de coeur » 2 pieces Sans perte d’espace, lumineux, poutres, parquet massif, belle hauteur sous plafonds, entièrement refait à neuf avec fenêtres double vitrage, volets roulants, porte blindée, cuisine entièrement équipée, salle d’eau avec fenêtre, idéalement situé...",
        "elevator": true,
        "expired": true,
        "expiredAt": "2023-06-28T18:03:13+02:00",
        "floor": 6,
        "furnished": true,
        "landSurface": 300,
        "lastCrawledAdvert": "21f2a17b-dae3-4ea4-976f-e521cebfe609",
        "lastCrawledAt": "2023-06-28T18:03:13+02:00",
        "locations": {
          "lat": 48.8530933,
          "lon": 2.2487626
        },
        "pictures": [
          "https://pictures.notif.immo/properties/2021/05/10/10/a20cbdc44632c63f89aad2e6d9d049.jpg",
          "https://pictures.notif.immo/properties/2021/05/10/10/b0935cb714d501c668b66997d7f16a.jpg",
          "https://pictures.notif.immo/properties/2021/05/10/10/7e1ea590d4b827e9a8a762e7f378fb.jpg"
        ],
        "price": 950,
        "pricePerMeter": 31.66,
        "property": "/properties/a2fe8869-bbd8-4d92-ad22-5ca5511a5bc7",
        "propertyType": 0,
        "publisherTypes": [
          1
        ],
        "room": 3,
        "stations": [
          {
            "id": 33,
            "lines": [
              {
                "color": "#128B5B",
                "id": 20,
                "name": "Ligne 12",
                "number": "12",
                "routeName": "Front Populaire ↔ Mairie d’Issy"
              }
            ],
            "name": "Jules Joffrin"
          },
          {
            "id": 191,
            "lines": [
              {
                "color": "#B94D9A",
                "id": 11,
                "name": "Ligne 4",
                "number": "4",
                "routeName": "Porte de Clignancourt ↔ Mairie de Montrouge"
              },
              {
                "color": "#128B5B",
                "id": 20,
                "name": "Ligne 12",
                "number": "12",
                "routeName": "Front Populaire ↔ Mairie d’Issy"
              }
            ],
            "name": "Marcadet-Poissonniers"
          }
        ],
        "surface": 30,
        "title": "Appartement 2 pieces",
        "transactionType": 1,
        "updatedAt": "2023-06-28T18:03:13+02:00",
        "uuid": "38cb65b9-2965-4bd0-bc9b-2b8a8be7c457"
      }
    ],
    "hydra:totalItems": 0,
    "hydra:view": {
      "@id": "string",
      "@type": "string",
      "hydra:first": "string",
      "hydra:last": "string",
      "hydra:next": "string"
    },
    "hydra:search": {
      "@type": "string",
      "hydra:template": "string",
      "hydra:variableRepresentation": "string",
      "hydra:mapping": [
        {
          "@type": "string",
          "variable": "string",
          "property": "string",
          "required": true
        }
      ]
    }
  }
  ```
</ResponseExample>

================================================
File: api-reference/endpoint/properties/get_single.mdx
================================================
---
title: "Property"
api: "GET /documents/properties/{id}"
description: "Returns a single property matching the given id."
---

### Path parameters

<ParamField path="id" type="string" required>
  UUID of the selected property
</ParamField>

<RequestExample>
  ```bash Example Request
  curl --location -g --request GET 'https://api.stream.estate/documents/properties/{id}' \
  --header 'Content-Type: application/json' \
  --header 'X-API-KEY: <api_key>' \
  ```
</RequestExample>

<ResponseExample>
  ```json Example Response
  {
    "@context": "/contexts/PropertyDocument",
    "@id": "/documents/properties/{id}",
    "@type": "PropertyDocument",
    "adverts": [
      {
        "condominiumFees": 1200,
        "constructionYear": 1982,
        "contact": {
          "agency": "Agence Immo 2000",
          "email": "contact@agenceimmo2000.fr",
          "fax": "0120304050",
          "name": "Olivie Olivier",
          "phone": "0120304050",
          "reference": "B42042"
        },
        "createdAt": "2023-05-24T09:29:17+02:00",
        "description": "Bel appartement « coup de coeur » 2 pieces Sans perte d’espace, lumineux, poutres, parquet massif, belle hauteur sous plafonds, entièrement refait à neuf avec fenêtres double vitrage, volets roulants, porte blindée, cuisine entièrement équipée, salle d’eau avec fenêtre, idéalement situé...",
        "elevator": true,
        "energy": {
          "category": "C",
          "value": 117
        },
        "events": [
          {
            "createdAt": "2023-05-24T09:29:17+02:00",
            "fieldName": "price",
            "fieldNewValue": "950",
            "fieldOldValue": "995",
            "percentVariation": -4.52
          }
        ],
        "features": [
          "Grand balcon",
          "Bâtiment de 5 étages",
          "Lumineux",
          "Coin cuisine"
        ],
        "feesPercentage": 10,
        "feesResponsibility": 0,
        "floor": 6,
        "floorQuantity": 6,
        "furnished": true,
        "greenHouseGas": {
          "category": "D",
          "value": 32
        },
        "inventoryPrice": 350,
        "landSurface": 300,
        "lastCrawledAt": "2023-05-24T09:29:17+02:00",
        "lotCount": 12,
        "pictures": [
          "https://pictures.notif.immo/properties/2021/05/10/10/a20cbdc44632c63f89aad2e6d9d049.jpg",
          "https://pictures.notif.immo/properties/2021/05/10/10/b0935cb714d501c668b66997d7f16a.jpg",
          "https://pictures.notif.immo/properties/2021/05/10/10/7e1ea590d4b827e9a8a762e7f378fb.jpg"
        ],
        "picturesRemote": [
          "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_45D57CD0-7D18-4FA0-B463-060789202625.jpg",
          "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_39192DB9-A503-4FD7-AEDB-3DEFFE35E42E.jpg",
          "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_FDDEC9E3-8A85-4BE5-83B8-12005A2D4078.jpg"
        ],
        "price": 950,
        "priceExcludingFees": 1800000,
        "publisher": {
          "category": "Portails",
          "name": "Century21",
          "type": 1
        },
        "rentalCharges": 75,
        "rentalPledge": 1000,
        "renterFees": 60,
        "surface": 30,
        "title": "Appartement 2 pieces",
        "updatedAt": "2023-05-24T09:29:17+02:00",
        "url": "https://www.century21.fr/trouver_logement/detail/2424196788/",
        "uuid": "21f2a17b-dae3-4ea4-976f-e521cebfe609",
        "virtualTour": "https://my.matterport.com/show/?m=9GnMTmZgY44"
      }
    ],
    "bedroom": 2,
    "city": {
      "cityParentId": 0,
      "country": {
        "code": "250",
        "id": 2,
        "name": "France"
      },
      "department": {
        "code": "75",
        "id": 77,
        "name": "Paris"
      },
      "groupedCityNames": [
        "string"
      ],
      "groupedCityZipcodes": [
        "string"
      ],
      "hasGroupedByName": false,
      "hasGroupedByZipcode": false,
      "id": 30950,
      "insee": "75116",
      "locations": {
        "lat": 48.8530933,
        "lon": 2.2487626
      },
      "name": "Paris 18e",
      "open": true,
      "originalName": "Paris 18e",
      "region": {
        "code": "11",
        "id": 7,
        "name": "Île-de-France"
      },
      "zipcode": "75018"
    },
    "createdAt": "2023-05-24T09:29:17+02:00",
    "description": "Bel appartement « coup de coeur » 2 pieces Sans perte d’espace, lumineux, poutres, parquet massif, belle hauteur sous plafonds, entièrement refait à neuf avec fenêtres double vitrage, volets roulants, porte blindée, cuisine entièrement équipée, salle d’eau avec fenêtre, idéalement situé...",
    "elevator": true,
    "expired": true,
    "expiredAt": "2023-05-24T09:29:17+02:00",
    "floor": 6,
    "furnished": true,
    "landSurface": 300,
    "lastCrawledAdvert": "21f2a17b-dae3-4ea4-976f-e521cebfe609",
    "lastCrawledAt": "2023-05-24T09:29:17+02:00",
    "locations": {
      "lat": 48.8530933,
      "lon": 2.2487626
    },
    "pictures": [
      "https://pictures.notif.immo/properties/2021/05/10/10/a20cbdc44632c63f89aad2e6d9d049.jpg",
      "https://pictures.notif.immo/properties/2021/05/10/10/b0935cb714d501c668b66997d7f16a.jpg",
      "https://pictures.notif.immo/properties/2021/05/10/10/7e1ea590d4b827e9a8a762e7f378fb.jpg"
    ],
    "price": 950,
    "pricePerMeter": 31.66,
    "property": "/properties/a2fe8869-bbd8-4d92-ad22-5ca5511a5bc7",
    "propertyType": 0,
    "publisherTypes": [
      1
    ],
    "room": 3,
    "stations": [
      {
        "id": 33,
        "lines": [
          {
            "color": "#128B5B",
            "id": 20,
            "name": "Ligne 12",
            "number": "12",
            "routeName": "Front Populaire ↔ Mairie d’Issy"
          }
        ],
        "name": "Jules Joffrin"
      },
      {
        "id": 191,
        "lines": [
          {
            "color": "#B94D9A",
            "id": 11,
            "name": "Ligne 4",
            "number": "4",
            "routeName": "Porte de Clignancourt ↔ Mairie de Montrouge"
          },
          {
            "color": "#128B5B",
            "id": 20,
            "name": "Ligne 12",
            "number": "12",
            "routeName": "Front Populaire ↔ Mairie d’Issy"
          }
        ],
        "name": "Marcadet-Poissonniers"
      }
    ],
    "surface": 30,
    "title": "Appartement 2 pieces",
    "transactionType": 1,
    "updatedAt": "2023-05-24T09:29:17+02:00",
    "uuid": "38cb65b9-2965-4bd0-bc9b-2b8a8be7c457"
  }
  ```
</ResponseExample>

================================================
File: api-reference/endpoint/searches/create.mdx
================================================
---
title: "Create Search"
api: "POST /searches"
description: "Creates a new search"
---

### Body

<ParamField body="bedroomMin" type="integer">
  Minimum number of bedrooms in the property.
</ParamField>

<ParamField body="bedroomMin" type="integer">
  Minimum number of bedrooms in the property.
</ParamField>

<ParamField body="budgetMax" type="number" >
  Maximum budget for the property.
</ParamField>
<ParamField body="budgetMin" type="integer">
  Minimum budget for the property.
</ParamField>

<ParamField body="endpointRecipient" type="string" >
  Endpoint webhook to receive new matches in real time. Https url is required. You can test your endpoint here using our [webhhook simulator](api-reference/endpoint/webhooks/send).
</ParamField>

<ParamField body="eventEndpoint" type="string" >
  Endpoint webhook to receive adverts events in real time. Https url is required. You can test your endpoint using our [webhhook simulator](api-reference/endpoint/webhooks/send)
</ParamField>

<ParamField body="excludedCities" type="array">
  Cities to be excluded.
</ParamField>

<ParamField query="excludedSites" type="array">
  Sources sites to be excluded.
</ParamField>

<ParamField body="excludedSiteCategories" type="array">
  Site categories to be excluded.
</ParamField>

<ParamField body="expressions" type="array">
  Full text matching including/excluding words & phrases in the title or the description of the property.
  Example: `expressions[0][0][word]=travaux&expressions[0][0][options][includes]=true&expressions[0][0][options][strict]=false&expressions[0][1][word]=lumineux&expressions[0][1][options][includes]=true&expressions[0][1][options][strict]=false` which will search for properties that contain both the keywords `lumineux` and `travaux`.
</ParamField>

<ParamField body="furnished" type="boolean" >
  Whether the property is furnished or not.
</ParamField>

<ParamField body="hidePropertyContact" type="boolean">
  Whether to hide property contact information or not.
</ParamField>

<ParamField body="includedCities" type="array">
  Included cities. Use [locations](/api-reference/endpoint/indicators/locations) to get the desired city ids.
</ParamField>

<ParamField body="includedDepartments" type="array">
  Included departments. Use [locations](/api-reference/endpoint/indicators/locations) to get the desired city ids.
</ParamField>

<ParamField body="includedSiteCategories" type="array">
  Included site categories.
</ParamField>

<ParamField query="includedSites" type="array">
  Sources sites to be included.
</ParamField>

<ParamField body="includedZipcodes" type="array">
  Included zipcodes.
</ParamField>

<ParamField body="landSurfaceMax" type="integer" >
  Maximum land surface.
</ParamField>

<ParamField body="landSurfaceMin" type="integer"  >
  Minimum land surface.
</ParamField>

<ParamField body="lat" type="number" >
  Latitude. Will work if latitude exists in the property. Example: `lat=48.864716`
</ParamField>

<ParamField body="lon" type="number" >
  Longitude. Will work if latitude exists in the property. Example: `lon=2.349014`
</ParamField>

<ParamField body="notificationEnabled" type="boolean" default="false">
  Enable notifications which can be webhooks or emails.
</ParamField>

<ParamField body="pricePerMeterMax" type="integer"  >
  Maximum price per meter.
</ParamField>

<ParamField body="pricePerMeterMin" type="integer"  >
  Minimum price per meter.
</ParamField>

<ParamField body="propertyTypes" type="number[]" required >
  Type of property. Apartment `0`, House `1`, Building `2`, Parking `3`, Office `4`, Land `5`, Shop `6`. Example: `propertyTypes[]=0&propertyTypes[]=1`
</ParamField>

<ParamField body="publisherTypes" type="array"  >
  Type of publisher. Individual `0`, Professional `1`. Example: `publisherTypes[]=0&publisherTypes[]=1`
</ParamField>

<ParamField body="radius" type="integer" >
  Distance expressed in kilometers. Will work if latitude & longitude parameters are also set. Example: `radius=20`
</ParamField>

<ParamField body="roomMin" type="integer">
  Minimum number of rooms.
</ParamField>

<ParamField body="roomMax" type="integer">
  Maximum number of rooms.
</ParamField>

<ParamField body="subscribedEvents" type="array" >
  Events you want to be alerted which will be sent to the `eventEndpoint`.
</ParamField>

<ParamField body="surfaceMax" type="integer"  >
  Maximum property surface area.
</ParamField>

<ParamField body="surfaceMin" type="integer"  >
  Minimum property surface area.
</ParamField>

<ParamField body="title" type="string" required>
  Title of the created search.
</ParamField>

<ParamField body="transactionType" type="integer" required >
  Type of transaction. Sell `0`, Rent `1`. Example: `transactionType=0`
</ParamField>

<ParamField body="withCoherentPrice" type="boolean" default="true">
  Having properties with coherent prices.
</ParamField>

<ParamField body="withVirtualTour" type="boolean" >
  Whether the property includes a virtual tour.
</ParamField>


<RequestExample>

```bash cURL
curl --location 'https://api.stream.estate/searches' \
--header 'Content-Type: application/json' \
--header 'X-API-KEY: <api_key>' \
--data-raw '{
  "bedroomMin": 0,
  "budgetMax": 1500000,
  "budgetMin": 0,
  "endpointRecipient": "https://hook.eu1.make.com/xyz",
  "eventEndpoint": "https://hook.eu1.make.com/xyz",
  "lat": 48.864716,
  "lon": 2.349014,
  "notificationEnabled": true,
  "notificationRecipient": "foo@bar.com",
  "propertyTypes": [0, 1],
  "radius": 20,
  "subscribedEvents": [
    "property.ad.create"
  ],
  "surfaceMax": 0,
  "surfaceMin": 20,
  "transactionType": 0,
  "title": "mySearch"
}'
```

```python Python

import requests
import json

url = "https://api.stream.estate/searches"

payload = json.dumps({
  "bedroomMin": 0,
  "budgetMax": 1500000,
  "budgetMin": 0,
  "endpointRecipient": "https://hook.eu1.make.com/xyz",
  "eventEndpoint": "https://hook.eu1.make.com/xyz",
  "lat": 48.864716,
  "lon": 2.349014,
  "notificationEnabled": True,
  "notificationRecipient": "foo@bar.com",
  "propertyTypes": [
    0,
    1
  ],
  "radius": 20,
  "subscribedEvents": [
    "property.ad.create"
  ],
  "surfaceMax": 0,
  "surfaceMin": 20,
  "transactionType": 0,
  "title": "mySearch"
})

headers = {
  'Content-Type': 'application/json',
  'X-API-KEY': '<api_key>'
}

response = requests.request("POST", url, headers=headers, data=payload)

print(response.json())
```

</RequestExample>

<ResponseExample>

```json Example Response
{
    "@context": "/contexts/Search",
    "@id": "/searches/xyz",
    "@type": "Search",
    "title": "mySearch",
    "user": "/users/xyz",
    "transactionType": 0,
    "budgetMax": 1500000,
    "budgetMin": 0,
    "bedroomMin": 0,
    "roomMin": null,
    "surfaceMin": 20,
    "surfaceMax": 0,
    "propertyTypes": [
        0,
        1
    ],
    "publisherTypes": [],
    "lastAlertAt": null,
    "token": "xyz",
    "pricePerMeterMin": null,
    "pricePerMeterMax": null,
    "createdAt": "2023-06-04T00:39:53+02:00",
    "updatedAt": "2023-06-04T00:39:53+02:00",
    "notificationEnabled": true,
    "includedCities": [],
    "includedDepartments": [],
    "excludedCities": [],
    "expressions": [],
    "notificationRecipient": "foo@bar.com",
    "furnished": null,
    "hidePropertyContact": false,
    "withVirtualTour": null,
    "withCoherentPrice": true,
    "landSurfaceMin": null,
    "landSurfaceMax": null,
    "includedSiteCategories": [],
    "excludedSiteCategories": [],
    "endpointRecipient": "https://hook.eu1.make.com/xyz",
    "eventEndpoint": "https://hook.eu1.make.com/xyz",
    "subscribedEvents": [
        "property.ad.create"
    ],
    "radius": 20,
    "lon": 2.349014,
    "lat": 48.864716
}
```

</ResponseExample>

================================================
File: api-reference/endpoint/searches/delete.mdx
================================================
---
title: "Delete Search"
api: "DELETE /searches/{id}"
description: "Deletes an existing search."
---

### Path

<ParamField path="id" type="string" required>
  UUID of the selected search
</ParamField>

<RequestExample>
  ```bash Example Request
  curl --location --request DELETE 'https://api.stream.estate/searches/{id}' \
  --header 'Content-Type: application/json' \
  --header 'X-API-KEY: <api_key>' \
  ```
</RequestExample>

================================================
File: api-reference/endpoint/searches/get_collection.mdx
================================================
---
title: "Searches"
api: "GET /searches"
description: "Returns a collection of your existing searches matching given criteria."
---

### Query parameters

<ParamField query="notificationEnabled" type="boolean">
  Filter searches which have notifications enabled or not.
</ParamField>

<ParamField query="order[title]" type="string" placeholder="asc, desc">
  Order searches by title. Can be `asc` or `desc`.
</ParamField>

<ParamField query="page" type="integer" default="1">
  The collection page number.
</ParamField>

<ParamField query="title" type="string">
  Title of the created search.
</ParamField>

<RequestExample>
  ```bash Example Request
  curl --location -g --request GET 'https://api.stream.estate/searches' \
  --header 'Content-Type: application/json' \
  --header 'X-API-KEY: <api_key>' \
  ```
</RequestExample>

<ResponseExample>
  ```json Example Response
  {
    "hydra:member": [
      {
        "@context": "string",
        "@id": "string",
        "@type": "string",
        "bedroomMin": 0,
        "budgetMax": 0,
        "budgetMin": 0,
        "createdAt": "2019-08-24T14:15:22Z",
        "endpointRecipient": "https://www.mycompany.com/webhook_melo_match",
        "eventEndpoint": "https://www.mycompany.com/webhook_melo_updates",
        "excludedCities": [
          {
            "@context": "string",
            "@id": "string",
            "@type": "string",
            "article": "string",
            "insee": "string",
            "libelle": "string",
            "name": "string",
            "zipcode": "string"
          }
        ],
        "excludedSiteCategories": [
          {
            "@context": "string",
            "@id": "string",
            "@type": "string",
            "name": "string"
          }
        ],
        "expressions": "expressions[0][0][options][includes]=true&expressions[0][0][options][strict]=true&expressions[1][0][word]=viager&expressions[1][0][options][includes]=true&expressions[1][0][options][strict]=true",
        "furnished": true,
        "hidePropertyContact": true,
        "includedCities": [
          {
            "@context": "string",
            "@id": "string",
            "@type": "string",
            "article": "string",
            "insee": "string",
            "libelle": "string",
            "name": "string",
            "zipcode": "string"
          }
        ],
        "includedDepartments": [
          {
            "@context": "string",
            "@id": "string",
            "@type": "string",
            "chefLieu": "string",
            "departmentCode": "string",
            "name": "string",
            "nameClean": "string"
          }
        ],
        "includedSiteCategories": [
          {
            "@context": "string",
            "@id": "string",
            "@type": "string",
            "name": "string"
          }
        ],
        "landSurfaceMax": 0,
        "landSurfaceMin": 0,
        "lastAlertAt": "2019-08-24T14:15:22Z",
        "lat": "48.864716",
        "lon": "2.349014",
        "notificationEnabled": false,
        "notificationRecipient": "foo@bar.com",
        "pricePerMeterMax": 0,
        "pricePerMeterMin": 0,
        "propertyTypes": 3,
        "publisherTypes": 3,
        "radius": "20",
        "roomMin": 0,
        "subscribedEvents": [
          "ad.update.price"
        ],
        "surfaceMax": 0,
        "surfaceMin": 0,
        "title": "string",
        "token": "string",
        "transactionType": "0",
        "updatedAt": "2019-08-24T14:15:22Z",
        "user": "string",
        "withCoherentPrice": true,
        "withVirtualTour": true
      }
    ],
    "hydra:totalItems": 0,
    "hydra:view": {
      "@id": "string",
      "@type": "string",
      "hydra:first": "string",
      "hydra:last": "string",
      "hydra:next": "string"
    },
    "hydra:search": {
      "@type": "string",
      "hydra:template": "string",
      "hydra:variableRepresentation": "string",
      "hydra:mapping": [
        {
          "@type": "string",
          "variable": "string",
          "property": "string",
          "required": true
        }
      ]
    }
  }
  ```
</ResponseExample>

================================================
File: api-reference/endpoint/searches/get_single.mdx
================================================
---
title: "Search"
api: "GET /searches/{id}"
description: "Returns a single existing search matching the given id."
---

### Path parameters

<ParamField path="id" type="string" required>
  UUID of the selected search
</ParamField>

<RequestExample>
  ```bash Example Request
  curl --location -g --request GET 'https://api.stream.estate/searches/{id}' \
  --header 'Content-Type: application/json' \
  --header 'X-API-KEY: <api_key>' \
  ```
</RequestExample>

<ResponseExample>
  ```json Example Response
  {
    "@context": "string",
    "@id": "string",
    "@type": "string",
    "bedroomMin": 0,
    "budgetMax": 0,
    "budgetMin": 0,
    "createdAt": "2019-08-24T14:15:22Z",
    "endpointRecipient": "https://www.mycompany.com/webhook_melo_match",
    "eventEndpoint": "https://www.mycompany.com/webhook_melo_updates",
    "excludedCities": [
      {
        "@context": "string",
        "@id": "string",
        "@type": "string",
        "article": "string",
        "insee": "string",
        "libelle": "string",
        "name": "string",
        "zipcode": "string"
      }
    ],
    "excludedSiteCategories": [
      {
        "@context": "string",
        "@id": "string",
        "@type": "string",
        "name": "string"
      }
    ],
    "expressions": "expressions[0][0][options][includes]=true&expressions[0][0][options][strict]=true&expressions[1][0][word]=viager&expressions[1][0][options][includes]=true&expressions[1][0][options][strict]=true",
    "furnished": true,
    "hidePropertyContact": true,
    "includedCities": [
      {
        "@context": "string",
        "@id": "string",
        "@type": "string",
        "article": "string",
        "insee": "string",
        "libelle": "string",
        "name": "string",
        "zipcode": "string"
      }
    ],
    "includedDepartments": [
      {
        "@context": "string",
        "@id": "string",
        "@type": "string",
        "chefLieu": "string",
        "departmentCode": "string",
        "name": "string",
        "nameClean": "string"
      }
    ],
    "includedSiteCategories": [
      {
        "@context": "string",
        "@id": "string",
        "@type": "string",
        "name": "string"
      }
    ],
    "landSurfaceMax": 0,
    "landSurfaceMin": 0,
    "lastAlertAt": "2019-08-24T14:15:22Z",
    "lat": "48.864716",
    "lon": "2.349014",
    "notificationEnabled": false,
    "notificationRecipient": "foo@bar.com",
    "pricePerMeterMax": 0,
    "pricePerMeterMin": 0,
    "propertyTypes": 3,
    "publisherTypes": 3,
    "radius": "20",
    "roomMin": 0,
    "subscribedEvents": [
      "ad.update.price"
    ],
    "surfaceMax": 0,
    "surfaceMin": 0,
    "title": "string",
    "token": "string",
    "transactionType": "0",
    "updatedAt": "2019-08-24T14:15:22Z",
    "user": "string",
    "withCoherentPrice": true,
    "withVirtualTour": true
  }
  ```
</ResponseExample>

================================================
File: api-reference/endpoint/searches/update.mdx
================================================
---
title: "Update Search"
api: "PUT /searches/{id}"
description: "Updates an existing search"
---

### Path

<ParamField path="id" type="string" required>
  UUID of the existing search
</ParamField>

### Body

<ParamField body="bedroomMin" type="integer">
  Minimum number of bedrooms in the property.
</ParamField>

<ParamField body="bedroomMin" type="integer">
  Minimum number of bedrooms in the property.
</ParamField>

<ParamField body="budgetMax" type="integer">
  Maximum budget for the property.
</ParamField>

<ParamField body="budgetMin" type="integer">
  Minimum budget for the property.
</ParamField>

<ParamField body="endpointRecipient" type="string">
  Endpoint webhook to receive new matches in real time. Https url is required. You can test your endpoint here using our [webhhok simulator](api-reference/endpoint/webhooks/send).
</ParamField>

<ParamField body="eventEndpoint" type="string">
  Endpoint webhook to receive adverts events in real time. Https url is required. You can test your endpoint using our [webhhok simulator](api-reference/endpoint/webhooks/send)
</ParamField>

<ParamField body="excludedCities" type="array">
  Cities to be excluded.
</ParamField>

<ParamField body="excludedSiteCategories" type="array">
  Site categories to be excluded.
</ParamField>

<ParamField body="expressions" type="array">
  Full text matching including/excluding words & phrases in the title or the description of the property.
  Example: `expressions[0][0][word]=travaux&expressions[0][0][options][includes]=true&expressions[0][0][options][strict]=false&expressions[0][1][word]=lumineux&expressions[0][1][options][includes]=true&expressions[0][1][options][strict]=false` which will search for properties that contain both the keywords `lumineux` and `travaux`.
</ParamField>

<ParamField body="furnished" type="boolean">
  Whether the property is furnished or not.
</ParamField>

<ParamField body="hidePropertyContact" type="boolean">
  Whether to hide property contact information or not.
</ParamField>

<ParamField body="includedCities" type="array">
  Included cities.
</ParamField>

<ParamField body="includedDepartments" type="array">
  Included departments.
</ParamField>

<ParamField body="includedSiteCategories" type="array">
  Included site categories.
</ParamField>

<ParamField body="landSurfaceMax" type="integer">
  Maximum land surface.
</ParamField>

<ParamField body="landSurfaceMin" type="integer">
  Minimum land surface.
</ParamField>

<ParamField body="lat" type="number">
  Latitude. Will work if latitude exists in the property. Example: `lat=48.864716`
</ParamField>

<ParamField body="lon" type="number">
  Longitude. Will work if latitude exists in the property. Example: `lon=2.349014`
</ParamField>

<ParamField body="notificationEnabled" type="boolean" default="false">
  Enable notifications which can be webhooks or emails.
</ParamField>

<ParamField body="pricePerMeterMax" type="integer">
  Maximum price per meter.
</ParamField>

<ParamField body="pricePerMeterMin" type="integer">
  Minimum price per meter.
</ParamField>

<ParamField body="propertyTypes" type="integer" required>
  Type of property. Apartment `0`, House `1`, Building `2`, Parking `3`, Office `4`, Land `5`, Shop `6`. Example: `propertyTypes[]=0&propertyTypes[]=1`
</ParamField>

<ParamField body="publisherTypes" type="integer">
  Type of publisher. Individual `0`, Professional `1`. Example: `publisherTypes[]=0&publisherTypes[]=1`
</ParamField>

<ParamField body="radius" type="integer">
  Distance expressed in kilometers. Will work if latitude & longitude exist in the property. Example: `radius=20`
</ParamField>

<ParamField body="roomMin" type="integer">
  Minimum number of rooms.
</ParamField>

<ParamField body="roomMax" type="integer">
  Maximum number of rooms.
</ParamField>

<ParamField body="subscribedEvents" type="array">
  Events you want to be alerted which will be sent to the `eventEndpoint`.
</ParamField>

<ParamField body="surfaceMax" type="integer">
  Maximum property surface area.
</ParamField>

<ParamField body="surfaceMin" type="integer">
  Minimum property surface area.
</ParamField>

<ParamField body="title" type="string" required>
  Title of the created search.
</ParamField>

<ParamField body="transactionType" type="integer" required>
  Type of transaction. Sell `0`, Rent `1`. Example: `transactionType=0`
</ParamField>

<ParamField body="withCoherentPrice" type="boolean" default="true">
  Having properties with coherent prices.
</ParamField>

<ParamField body="withVirtualTour" type="boolean">
  Whether the property includes a virtual tour.
</ParamField>

<RequestExample>
  ```bash Example Request
  curl --location --request POST 'https://api.stream.estate/searches/{id}' \
  --header 'Content-Type: application/json' \
  --header 'X-API-KEY: <api_key>' \
  --data-raw '{
    "bedroomMin": 0,
    "budgetMax": 0,
    "budgetMin": 0,
    "endpointRecipient": "https://www.mycompany.com/webhook_melo_match",
    "eventEndpoint": "https://www.mycompany.com/webhook_melo_updates",
    "excludedCities": [
      "string"
    ],
    "excludedSiteCategories": [
      "string"
    ],
    "expressions": "expressions[0][0][options][includes]=true&expressions[0][0][options][strict]=true&expressions[1][0][word]=viager&expressions[1][0][options][includes]=true&expressions[1][0][options][strict]=true",
    "furnished": true,
    "hidePropertyContact": true,
    "includedCities": [
      "string"
    ],
    "includedDepartments": [
      "string"
    ],
    "includedSiteCategories": [
      "string"
    ],
    "landSurfaceMax": 0,
    "landSurfaceMin": 0,
    "lat": "48.864716",
    "lon": "2.349014",
    "notificationEnabled": false,
    "notificationRecipient": "foo@bar.com",
    "pricePerMeterMax": 0,
    "pricePerMeterMin": 0,
    "propertyTypes": 3,
    "publisherTypes": 3,
    "radius": "20",
    "roomMin": 0,
    "subscribedEvents": [
      "ad.update.price"
    ],
    "surfaceMax": 0,
    "surfaceMin": 0,
    "title": "string",
    "transactionType": "0",
    "withCoherentPrice": true,
    "withVirtualTour": true
  }'
  ```
</RequestExample>

<ResponseExample>
  ```json Example Response
  {
    "bedroomMin": 0,
    "budgetMax": 0,
    "budgetMin": 0,
    "endpointRecipient": "https://www.mycompany.com/webhook_melo_match",
    "eventEndpoint": "https://www.mycompany.com/webhook_melo_updates",
    "excludedCities": [
      "string"
    ],
    "excludedSiteCategories": [
      "string"
    ],
    "expressions": "expressions[0][0][options][includes]=true&expressions[0][0][options][strict]=true&expressions[1][0][word]=viager&expressions[1][0][options][includes]=true&expressions[1][0][options][strict]=true",
    "furnished": true,
    "hidePropertyContact": true,
    "includedCities": [
      "string"
    ],
    "includedDepartments": [
      "string"
    ],
    "includedSiteCategories": [
      "string"
    ],
    "landSurfaceMax": 0,
    "landSurfaceMin": 0,
    "lat": "48.864716",
    "lon": "2.349014",
    "notificationEnabled": false,
    "notificationRecipient": "foo@bar.com",
    "pricePerMeterMax": 0,
    "pricePerMeterMin": 0,
    "propertyTypes": 3,
    "publisherTypes": 3,
    "radius": "20",
    "roomMin": 0,
    "subscribedEvents": [
      "ad.update.price"
    ],
    "surfaceMax": 0,
    "surfaceMin": 0,
    "title": "string",
    "transactionType": "0",
    "withCoherentPrice": true,
    "withVirtualTour": true
  }
  ```
</ResponseExample>

================================================
File: api-reference/endpoint/webhooks/send.mdx
================================================
---
title: "Simulate"
api: "GET /webhook-tester"
description: "This endpoint will simulate a `match` or an `event` to the given endpoint."
---
<Note>
Please read our [Concepts](https://docs.stream.estate/concepts) to understand the differences between a `property`, a `match`, an `advert` and an `event`.
</Note>

<Tip>
If you want to receive new `properties` that meet your search criteria in real time, you need to provide on [POST /searches](http://docs.stream.estate/api-reference/endpoint/searches/create):
* an `endpointRecipient`
* set the `notificationEnabled` parameter to `true`
</Tip>

<Tip>
If you want to receive new `events` in real time you need to provide on [POST /searches](http://docs.stream.estate/api-reference/endpoint/searches/create):
* an `eventEndpoint`
* set the `notificationEnabled` parameter to `true`
* set the events you want to subscribe to using the `subscribedEvents` parameter. All types of events are listed below this section.
</Tip>

<Warning>
Restricting your endpoints to our IP addresses is highly recommended for security reasons:
+ Sandbox: `178.238.226.136`
+ Production: `144.76.91.183`

Your server implementation should return a `200` HTTP status code if the data was received successfully. If a webhook fails, it will be retried up to five times. Every retry will take place 1 hour after the previous one.
</Warning>

| Events              | Description                                                  |
|--------------------|--------------------------------------------------------------|
| `ad.update.price`  | Notifies you when the price of an advert changes.       |
| `ad.update.surface`| Notifies you when the surface area of an advert changes.|
| `ad.update.pictures`| Notifies you when the pictures of an advert are updated.|
| `ad.update.expired`| Notifies you when an advert has expired.
| `property.ad.create` | Notifies you when a new advert is created. |
| `property.ad.update` | Notifies you when an existing advert is updated. |                   |



### Path

<ParamField query="endpoint" type="url" required placeholder="https://hook.eu1.make.com/...">
  Endpoint where the match or the event will be sent to.
</ParamField>

<ParamField query="eventType" type="string" required placeholder="ad.update.price">
  The type of event you want to trigger.
</ParamField>

<RequestExample>

```bash Example Request
curl --location --request GET 'https://api.stream.estate/webhook-tester' \
--header 'Content-Type: application/json' \
--header 'X-API-KEY: <api_key>' \
```
</RequestExample>

<ResponseExample>
```json Example Event Webhook
{
  "event": "ad.update.price",
  "adEvent": {
    "fieldName": "price",
    "fieldOldValue": "900",
    "fieldNewValue": "875",
    "percentVariation": "-2.81",
    "createdAt": "2019-08-24T14:15:22Z"
  },
  "match": {
    "@context": "string",
    "@id": "string",
    "@type": "string",
    "property": "string",
    "search": "string",
    "createdAt": "2019-08-24T14:15:22Z",
    "updatedAt": "2019-08-24T14:15:22Z",
    "propertyDocument": {
      "@context": "/contexts/PropertyDocument",
      "@id": "/documents/properties/a2fe8869-bbd8-4d92-ad22-5ca5511a5bc7",
      "@type": "PropertyDocument",
      "adverts": [
        {
          "contact": {
            "agency": "Agence Immo 2000",
            "email": "contact@agenceimmo2000.fr",
            "fax": "0120304050",
            "name": "Olivie Olivier",
            "phone": "0120304050",
            "reference": "B42042"
          },
          "createdAt": "2024-03-26T10:39:41+01:00",
          "description": "Bel appartement « coup de coeur » 2 pieces Sans perte d’espace, lumineux, poutres, parquet massif, belle hauteur sous plafonds, entièrement refait à neuf avec fenêtres double vitrage, volets roulants, porte blindée, cuisine entièrement équipée, salle d’eau avec fenêtre, idéalement situé...",
          "elevator": true,
          "events": [
            {
              "createdAt": "2024-03-26T10:39:41+01:00",
              "fieldName": "price",
              "fieldNewValue": "950",
              "fieldOldValue": "995",
              "percentVariation": -4.52
            }
          ],
          "features": [
            "Grand balcon",
            "Bâtiment de 5 étages",
            "Lumineux",
            "Coin cuisine"
          ],
          "energy": {
            "category": "C",
            "value": 117
          },
          "greenHouseGas": {
            "category": "D",
            "value": 32
          },
          "constructionYear": 1982,
          "floorQuantity": 6,
          "renterFees": 60,
          "rentalPledge": 1000,
          "inventoryPrice": 350,
          "rentalCharges": 75,
          "feesPercentage": 10,
          "priceExcludingFees": 1800000,
          "feesResponsibility": 0,
          "lotCount": 12,
          "condominiumFees": 1200,
          "floor": 6,
          "furnished": true,
          "lastCrawledAt": "2024-03-26T10:39:41+01:00",
          "publisher": {
            "category": "Portails",
            "name": "Century21",
            "type": 1
          },
          "surface": 30,
          "landSurface": 300,
          "pictures": [
            "https://pictures.notif.immo/properties/2021/05/10/10/a20cbdc44632c63f89aad2e6d9d049.jpg",
            "https://pictures.notif.immo/properties/2021/05/10/10/b0935cb714d501c668b66997d7f16a.jpg",
            "https://pictures.notif.immo/properties/2021/05/10/10/7e1ea590d4b827e9a8a762e7f378fb.jpg"
          ],
          "picturesRemote": [
            "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_45D57CD0-7D18-4FA0-B463-060789202625.jpg",
            "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_39192DB9-A503-4FD7-AEDB-3DEFFE35E42E.jpg",
            "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_FDDEC9E3-8A85-4BE5-83B8-12005A2D4078.jpg"
          ],
          "price": 950,
          "title": "Appartement 2 pieces",
          "updatedAt": "2024-03-26T10:39:41+01:00",
          "url": "https://www.century21.fr/trouver_logement/detail/2424196788/",
          "uuid": "21f2a17b-dae3-4ea4-976f-e521cebfe609",
          "virtualTour": "https://my.matterport.com/show/?m=9GnMTmZgY44"
        }
      ],
      "bedroom": 2,
      "city": {
        "cityParentId": 0,
        "country": {
          "code": "250",
          "id": 2,
          "name": "France"
        },
        "department": {
          "code": "75",
          "id": 77,
          "name": "Paris"
        },
        "groupedCityNames": [
          "string"
        ],
        "groupedCityZipcodes": [
          "string"
        ],
        "hasGroupedByName": false,
        "hasGroupedByZipcode": false,
        "id": 30950,
        "insee": "75116",
        "location": {
          "lat": 48.8530933,
          "lon": 2.2487626
        },
        "name": "Paris 18e",
        "open": true,
        "originalName": "Paris 18e",
        "region": {
          "code": "11",
          "id": 7,
          "name": "Île-de-France"
        },
        "zipcode": "75018"
      },
      "createdAt": "2024-03-26T10:39:41+01:00",
      "description": "Bel appartement « coup de coeur » 2 pieces Sans perte d’espace, lumineux, poutres, parquet massif, belle hauteur sous plafonds, entièrement refait à neuf avec fenêtres double vitrage, volets roulants, porte blindée, cuisine entièrement équipée, salle d’eau avec fenêtre, idéalement situé...",
      "elevator": true,
      "expired": true,
      "expiredAt": "2024-03-26T10:39:41+01:00",
      "floor": 6,
      "furnished": true,
      "landSurface": 300,
      "lastCrawledAdvert": "21f2a17b-dae3-4ea4-976f-e521cebfe609",
      "lastCrawledAt": "2024-03-26T10:39:41+01:00",
      "locations": {
        "lat": 48.8530933,
        "lon": 2.2487626
      },
      "pictures": [
        "https://pictures.notif.immo/properties/2021/05/10/10/a20cbdc44632c63f89aad2e6d9d049.jpg",
        "https://pictures.notif.immo/properties/2021/05/10/10/b0935cb714d501c668b66997d7f16a.jpg",
        "https://pictures.notif.immo/properties/2021/05/10/10/7e1ea590d4b827e9a8a762e7f378fb.jpg"
      ],
      "price": 950,
      "pricePerMeter": 31.66,
      "property": "/properties/a2fe8869-bbd8-4d92-ad22-5ca5511a5bc7",
      "propertyType": 0,
      "publisherTypes": [
        1
      ],
      "room": 3,
      "stations": [
        {
          "id": 33,
          "lines": [
            {
              "color": "#128B5B",
              "id": 20,
              "name": "Ligne 12",
              "number": "12",
              "routeName": "Front Populaire ↔ Mairie d'Issy"
            }
          ],
          "name": "Jules Joffrin"
        },
        {
          "id": 191,
          "lines": [
            {
              "color": "#B94D9A",
              "id": 11,
              "name": "Ligne 4",
              "number": "4",
              "routeName": "Porte de Clignancourt ↔ Mairie de Montrouge"
            },
            {
              "color": "#128B5B",
              "id": 20,
              "name": "Ligne 12",
              "number": "12",
              "routeName": "Front Populaire ↔ Mairie d'Issy"
            }
          ],
          "name": "Marcadet-Poissonniers"
        }
      ],
      "surface": 30,
      "title": "Appartement 2 pieces",
      "transactionType": 1,
      "updatedAt": "2024-03-26T10:39:41+01:00",
      "uuid": "38cb65b9-2965-4bd0-bc9b-2b8a8be7c457"
    }
  }
}
```
</ResponseExample>

<ResponseExample>
```json Example Match Webhook
{
  "@context": "string",
  "@id": "string",
  "@type": "string",
  "property": "string",
  "search": "string",
  "createdAt": "2019-08-24T14:15:22Z",
  "updatedAt": "2019-08-24T14:15:22Z",
  "propertyDocument": {
    "@context": "/contexts/PropertyDocument",
    "@id": "/documents/properties/a2fe8869-bbd8-4d92-ad22-5ca5511a5bc7",
    "@type": "PropertyDocument",
    "adverts": [
      {
        "contact": {
          "agency": "Agence Immo 2000",
          "email": "contact@agenceimmo2000.fr",
          "fax": "0120304050",
          "name": "Olivie Olivier",
          "phone": "0120304050",
          "reference": "B42042"
        },
        "createdAt": "2024-02-20T14:50:32+01:00",
        "description": "Bel appartement « coup de coeur » 2 pieces Sans perte d'espace, lumineux, poutres, parquet massif, belle hauteur sous plafonds, entièrement refait à neuf avec fenêtres double vitrage, volets roulants, porte blindée, cuisine entièrement équipée, salle d'eau avec fenêtre, idéalement situé...",
        "elevator": true,
        "events": [
          {
            "createdAt": "2024-02-20T14:50:32+01:00",
            "fieldName": "price",
            "fieldNewValue": "950",
            "fieldOldValue": "995",
            "percentVariation": -4.52
          }
        ],
        "features": [
          "Grand balcon",
          "Bâtiment de 5 étages",
          "Lumineux",
          "Coin cuisine"
        ],
        "energy": {
          "category": "C",
          "value": 117
        },
        "greenHouseGas": {
          "category": "D",
          "value": 32
        },
        "constructionYear": 1982,
        "floorQuantity": 6,
        "renterFees": 60,
        "rentalPledge": 1000,
        "inventoryPrice": 350,
        "rentalCharges": 75,
        "feesPercentage": 10,
        "priceExcludingFees": 1800000,
        "feesResponsibility": 0,
        "lotCount": 12,
        "condominiumFees": 1200,
        "floor": 6,
        "furnished": true,
        "lastCrawledAt": "2024-02-20T14:50:32+01:00",
        "publisher": {
          "category": "Portails",
          "name": "Century21",
          "type": 1
        },
        "surface": 30,
        "landSurface": 300,
        "pictures": [
          "https://pictures.notif.immo/properties/2021/05/10/10/a20cbdc44632c63f89aad2e6d9d049.jpg",
          "https://pictures.notif.immo/properties/2021/05/10/10/b0935cb714d501c668b66997d7f16a.jpg",
          "https://pictures.notif.immo/properties/2021/05/10/10/7e1ea590d4b827e9a8a762e7f378fb.jpg"
        ],
        "picturesRemote": [
          "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_45D57CD0-7D18-4FA0-B463-060789202625.jpg",
          "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_39192DB9-A503-4FD7-AEDB-3DEFFE35E42E.jpg",
          "https://www.century21.fr/imagesBien/s3/202/3427/c21_202_3427_1185_1_FDDEC9E3-8A85-4BE5-83B8-12005A2D4078.jpg"
        ],
        "price": 950,
        "title": "Appartement 2 pieces",
        "updatedAt": "2024-02-20T14:50:32+01:00",
        "url": "https://www.century21.fr/trouver_logement/detail/2424196788/",
        "uuid": "21f2a17b-dae3-4ea4-976f-e521cebfe609",
        "virtualTour": "https://my.matterport.com/show/?m=9GnMTmZgY44"
      }
    ],
    "bedroom": 2,
    "city": {
      "cityParentId": 0,
      "country": {
        "code": "250",
        "id": 2,
        "name": "France"
      },
      "department": {
        "code": "75",
        "id": 77,
        "name": "Paris"
      },
      "groupedCityNames": [
        "string"
      ],
      "groupedCityZipcodes": [
        "string"
      ],
      "hasGroupedByName": false,
      "hasGroupedByZipcode": false,
      "id": 30950,
      "insee": "75116",
      "location": {
        "lat": 48.8530933,
        "lon": 2.2487626
      },
      "name": "Paris 18e",
      "open": true,
      "originalName": "Paris 18e",
      "region": {
        "code": "11",
        "id": 7,
        "name": "Île-de-France"
      },
      "zipcode": "75018"
    },
    "createdAt": "2024-02-20T14:50:32+01:00",
    "description": "Bel appartement « coup de coeur » 2 pieces Sans perte d’espace, lumineux, poutres, parquet massif, belle hauteur sous plafonds, entièrement refait à neuf avec fenêtres double vitrage, volets roulants, porte blindée, cuisine entièrement équipée, salle d’eau avec fenêtre, idéalement situé...",
    "elevator": true,
    "expired": true,
    "expiredAt": "2024-02-20T14:50:32+01:00",
    "floor": 6,
    "furnished": true,
    "landSurface": 300,
    "lastCrawledAdvert": "21f2a17b-dae3-4ea4-976f-e521cebfe609",
    "lastCrawledAt": "2024-02-20T14:50:32+01:00",
    "locations": {
      "lat": 48.8530933,
      "lon": 2.2487626
    },
    "pictures": [
      "https://pictures.notif.immo/properties/2021/05/10/10/a20cbdc44632c63f89aad2e6d9d049.jpg",
      "https://pictures.notif.immo/properties/2021/05/10/10/b0935cb714d501c668b66997d7f16a.jpg",
      "https://pictures.notif.immo/properties/2021/05/10/10/7e1ea590d4b827e9a8a762e7f378fb.jpg"
    ],
    "price": 950,
    "pricePerMeter": 31.66,
    "property": "/properties/a2fe8869-bbd8-4d92-ad22-5ca5511a5bc7",
    "propertyType": 0,
    "publisherTypes": [
      1
    ],
    "room": 3,
    "stations": [
      {
        "id": 33,
        "lines": [
          {
            "color": "#128B5B",
            "id": 20,
            "name": "Ligne 12",
            "number": "12",
            "routeName": "Front Populaire ↔ Mairie d'Issy"
          }
        ],
        "name": "Jules Joffrin"
      },
      {
        "id": 191,
        "lines": [
          {
            "color": "#B94D9A",
            "id": 11,
            "name": "Ligne 4",
            "number": "4",
            "routeName": "Porte de Clignancourt ↔ Mairie de Montrouge"
          },
          {
            "color": "#128B5B",
            "id": 20,
            "name": "Ligne 12",
            "number": "12",
            "routeName": "Front Populaire ↔ Mairie d'Issy"
          }
        ],
        "name": "Marcadet-Poissonniers"
      }
    ],
    "surface": 30,
    "title": "Appartement 2 pieces",
    "transactionType": 1,
    "updatedAt": "2024-02-20T14:50:32+01:00",
    "uuid": "38cb65b9-2965-4bd0-bc9b-2b8a8be7c457"
  }
}
```
</ResponseExample>

